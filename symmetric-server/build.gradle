apply from: symAssembleDir + '/common.gradle'
apply from: symAssembleDir + '/asciidoc.gradle'

    description = 'SymmetricDS Server library for JDBC client'

    apply plugin: 'distribution'

    dependencies {
        compile project(":symmetric-client")
        compileOnly project(":symmetric-swagger-ui")
        compile "org.springframework:spring-jms:$springVersion"
        compile "org.springframework:spring-web:$springVersion"
        compile "org.springframework:spring-webmvc:$springVersion"
        compile "javax.xml.bind:jaxb-api:$jaxbVersion"
        compile "org.jdom:jdom2:$jdomVersion"
        compile "commons-fileupload:commons-fileupload:$commonsFileuploadVersion"
        
        compile "io.swagger:swagger-annotations:1.5.20"

        provided project(":symmetric-wrapper")
        provided "javax.jms:jms-api:1.1-rev-1"
        
        provided "com.h2database:h2:$h2Version"
        provided "mysql:mysql-connector-java:$mysqlVersion"
        provided "org.postgresql:postgresql:$postgresqlVersion"
        provided "jdbc:ojdbc8:18.3.0.0"
        provided "net.sourceforge.jtds:jtds:$jtdsVersion"

        compile "org.bouncycastle:bcprov-jdk15on:$bouncyCastleVersion"
        compile "org.bouncycastle:bcpkix-jdk15on:$bouncyCastleVersion"        
                
        compileOnly "org.codehaus.mojo:animal-sniffer-annotations:$animalSnifferVersion"
        
        provided "javax.servlet:javax.servlet-api:$servletVersion"
        provided "org.eclipse.jetty:jetty-webapp:$jettyVersion"
        provided "javax.websocket:javax.websocket-api:$websocketVersion"
        provided ("org.eclipse.jetty.websocket:javax-websocket-server-impl:$jettyVersion") {
           exclude group: "org.eclipse.jetty", module: "jetty-annotations"
           exclude group: "org.eclipse.jetty", module: "jetty-jmx"
           exclude group: "org.eclipse.jetty", module: "jetty-jndi"
           exclude group: "org.eclipse.jetty", module: "jetty-plus"
           exclude group: "org.ow2.asm"
        }

        provided "org.eclipse.jetty.http2:http2-server:$jettyVersion"
        provided "org.eclipse.jetty:jetty-alpn-conscrypt-server:$jettyVersion"
        provided "org.mortbay.jetty.alpn:alpn-boot:$alpnBootVersion"
        compileOnly "org.eclipse.jetty.alpn:alpn-api:$alpnApiVersion"
    
        testCompile project(path: ':symmetric-util', configuration: 'testArtifacts')
        testCompile project(path: ':symmetric-io', configuration: 'testArtifacts')
        integrationTestCompile project(':symmetric-jdbc').sourceSets.integrationTest.output
        testCompile project(path: ':symmetric-core', configuration: 'testArtifacts')
        integrationTestCompile project(':symmetric-client').sourceSets.integrationTest.output
    }

    distributions {
        server {
            baseName = 'symmetric-server'
            contents {
                from { 'COPYING' }
                from { 'CREDITS' }
                from { 'NOTICE' }
                from ('src/main/deploy') {
                    exclude 'bin/sym'
                    exclude 'bin/symadmin'
                    exclude 'bin/dbexport'
                    exclude 'bin/dbimport'
                    exclude 'bin/dbfill'
                    exclude 'bin/jmx'
                    exclude 'bin/dbsql'
                    exclude 'bin/dbcompare'
                    exclude 'bin/sym_service'
                    exclude 'bin/setenv'
                    exclude 'security'
                }
                from ('src/main/deploy') {
                    include 'bin/sym'
                    include 'bin/symadmin'
                    include 'bin/dbexport'
                    include 'bin/dbimport'
                    include 'bin/dbfill'
                    include 'bin/jmx'
                    include 'bin/dbsql'
                    include 'bin/dbcompare'
                    include 'bin/sym_service'
                    include 'bin/setenv'
                    fileMode 0755
                }
                from ('src/main/deploy') {
                    include 'security/*'
                    fileMode 0600
                    dirMode 0700
                }
                into('doc') { from ("$symAssembleDir/build/doc") }
                into('lib') {
                    from configurations.provided { exclude "*animal-sniffer*" }
                    rename 'symmetric-wrapper(.*).jar', 'symmetric-wrapper.jar'
                }
                into('web/WEB-INF/lib') {
                    from project(":symmetric-server").jar
                    from configurations.compile.filter {  a ->
                                !configurations.provided.contains(a) &&
                                !project(':symmetric-server').configurations.provided.contains(a)
                    }
                }
            }
        }
    }
    
    
    serverDistZip.dependsOn { ':symmetric-server:jar' }
    serverDistZip.dependsOn { ':symmetric-server:generateDocs' }
    generateAppendixes.dependsOn(project(':symmetric-server').jar)